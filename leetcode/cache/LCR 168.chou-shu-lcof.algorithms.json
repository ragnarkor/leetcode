{"id":100334,"fid":"LCR 168","name":"丑数","slug":"chou-shu-lcof","link":"https://leetcode.cn/problems/chou-shu-lcof/description/","percent":64.25002350116783,"level":"Medium","category":"algorithms","en_name":"丑数","cn_name":"丑数","totalAC":"178.8K","totalSubmit":"278.6K","likes":508,"dislikes":0,"desc":"<p>给你一个整数 <code>n</code> ，请你找出并返回第 <code>n</code> 个 丑数 。</p>\n\n<p><strong>说明：</strong>丑数是只包含质因数 2、3 和/或 5 的正整数；1 是丑数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> n = 10\n<strong>输出:</strong> 12\n<strong>解释: </strong><code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> 是前 10 个丑数。</pre>\n\n<p><b>提示：</b>&nbsp;</p>\n\n<ul>\n\t<li><code>1 &lt;= n&nbsp;&lt;=<b>&nbsp;</b>1690</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>注意：本题与主站 264 题相同：<a href=\"https://leetcode-cn.com/problems/ugly-number-ii/\">https://leetcode-cn.com/problems/ugly-number-ii/</a></p>\n\n<p>&nbsp;</p>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int nthUglyNumber(int n) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int nthUglyNumber(int n) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def nthUglyNumber(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def nthUglyNumber(self, n: int) -> int:"},{"value":"c","text":"C","defaultCode":"\n\nint nthUglyNumber(int n){\n\n}\n"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int NthUglyNumber(int n) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {number}\n */\nvar nthUglyNumber = function(n) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function nthUglyNumber(n: number): number {\n\n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function nthUglyNumber($n) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func nthUglyNumber(_ n: Int) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun nthUglyNumber(n: Int): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int nthUglyNumber(int n) {\n\n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func nthUglyNumber(n int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Integer}\ndef nth_ugly_number(n)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def nthUglyNumber(n: Int): Int = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn nth_ugly_number(n: i32) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (nth-ugly-number n)\n  (-> exact-integer? exact-integer?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec nth_ugly_number(N :: integer()) -> integer().\nnth_ugly_number(N) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec nth_ugly_number(n :: integer) :: integer\n  def nth_ugly_number(n) do\n\n  end\nend"}],"testcase":"10","testable":true,"templateMeta":{"name":"nthUglyNumber","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}