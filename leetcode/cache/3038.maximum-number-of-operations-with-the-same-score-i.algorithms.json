{"id":3320,"fid":"3038","name":"相同分数的最大操作数目 I","slug":"maximum-number-of-operations-with-the-same-score-i","link":"https://leetcode.cn/problems/maximum-number-of-operations-with-the-same-score-i/description/","percent":63.54527236290763,"level":"Easy","category":"algorithms","en_name":"Maximum Number of Operations With the Same Score I","cn_name":"相同分数的最大操作数目 I","totalAC":"7.8K","totalSubmit":"11.2K","likes":7,"dislikes":0,"desc":"<p>给你一个整数数组&nbsp;<code>nums</code>&nbsp;，如果&nbsp;<code>nums</code>&nbsp;<strong>至少</strong>&nbsp;包含&nbsp;<code>2</code>&nbsp;个元素，你可以执行以下操作：</p>\n\n<ul>\n\t<li>选择 <code>nums</code>&nbsp;中的前两个元素并将它们删除。</li>\n</ul>\n\n<p>一次操作的 <strong>分数</strong>&nbsp;是被删除元素的和。</p>\n\n<p>在确保<strong>&nbsp;所有操作分数相同</strong>&nbsp;的前提下，请你求出 <strong>最多</strong>&nbsp;能进行多少次操作。</p>\n\n<p>请你返回按照上述要求 <strong>最多</strong>&nbsp;可以进行的操作次数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong class=\"example\">示例 1：</strong></p>\n\n<pre>\n<b>输入：</b>nums = [3,2,1,4,5]\n<b>输出：</b>2\n<b>解释：</b>我们执行以下操作：\n- 删除前两个元素，分数为 3 + 2 = 5 ，nums = [1,4,5] 。\n- 删除前两个元素，分数为 1 + 4 = 5 ，nums = [5] 。\n由于只剩下 1 个元素，我们无法继续进行任何操作。</pre>\n\n<p><strong class=\"example\">示例 2：</strong></p>\n\n<pre>\n<b>输入：</b>nums = [3,2,6,1,4]\n<b>输出：</b>1\n<b>解释：</b>我们执行以下操作：\n- 删除前两个元素，分数为 3 + 2 = 5 ，nums = [6,1,4] 。\n由于下一次操作的分数与前一次不相等，我们无法继续进行任何操作。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int maxOperations(vector<int>& nums) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int maxOperations(int[] nums) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def maxOperations(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def maxOperations(self, nums: List[int]) -> int:"},{"value":"c","text":"C","defaultCode":"int maxOperations(int* nums, int numsSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MaxOperations(int[] nums) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxOperations = function(nums) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function maxOperations(nums: number[]): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxOperations($nums) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func maxOperations(_ nums: [Int]) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun maxOperations(nums: IntArray): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int maxOperations(List<int> nums) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func maxOperations(nums []int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @return {Integer}\ndef max_operations(nums)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def maxOperations(nums: Array[Int]): Int = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn max_operations(nums: Vec<i32>) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (max-operations nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec max_operations(Nums :: [integer()]) -> integer().\nmax_operations(Nums) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec max_operations(nums :: [integer]) :: integer\n  def max_operations(nums) do\n    \n  end\nend"}],"testcase":"[3,2,1,4,5]","testable":true,"templateMeta":{"name":"maxOperations","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}