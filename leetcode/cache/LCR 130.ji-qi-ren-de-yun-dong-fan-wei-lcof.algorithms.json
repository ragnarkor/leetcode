{"id":100281,"fid":"LCR 130","name":"衣橱整理","slug":"ji-qi-ren-de-yun-dong-fan-wei-lcof","link":"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/description/","percent":53.52885974262275,"level":"Medium","category":"algorithms","en_name":"衣橱整理","cn_name":"衣橱整理","totalAC":"336.2K","totalSubmit":"628K","likes":680,"dislikes":0,"desc":"<p>家居整理师将待整理衣橱划分为 <code>m x n</code> 的二维矩阵 <code>grid</code>，其中 <code>grid[i][j]</code> 代表一个需要整理的格子。整理师自 <code>grid[0][0]</code> 开始 <strong>逐行逐列</strong> 地整理每个格子。</p>\n\n<p>整理规则为：在整理过程中，可以选择&nbsp;<strong>向右移动一格&nbsp;</strong>或&nbsp;<strong>向下移动一格</strong>，但不能移动到衣柜之外。同时，不需要整理 <code>digit(i)&nbsp;+ digit(j)&nbsp;&gt; cnt</code> 的格子，其中 <code>digit(x)</code>&nbsp;表示数字&nbsp;<code>x</code> 的各数位之和。</p>\n\n<p>请返回整理师&nbsp;<strong>总共需要整理多少个格子</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>m = 4, n = 7, cnt = 5\n<strong>输出：</strong>18\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n, m &lt;= 100</code></li>\n\t<li><code>0 &lt;= cnt &lt;= 20</code></li>\n</ul>\n\n<p>&nbsp;</p>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int wardrobeFinishing(int m, int n, int cnt) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int wardrobeFinishing(int m, int n, int cnt) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def wardrobeFinishing(self, m, n, cnt):\n        \"\"\"\n        :type m: int\n        :type n: int\n        :type cnt: int\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def wardrobeFinishing(self, m: int, n: int, cnt: int) -> int:"},{"value":"c","text":"C","defaultCode":"int wardrobeFinishing(int m, int n, int cnt) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int WardrobeFinishing(int m, int n, int cnt) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} m\n * @param {number} n\n * @param {number} cnt\n * @return {number}\n */\nvar wardrobeFinishing = function(m, n, cnt) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function wardrobeFinishing(m: number, n: number, cnt: number): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $m\n     * @param Integer $n\n     * @param Integer $cnt\n     * @return Integer\n     */\n    function wardrobeFinishing($m, $n, $cnt) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func wardrobeFinishing(_ m: Int, _ n: Int, _ cnt: Int) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun wardrobeFinishing(m: Int, n: Int, cnt: Int): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int wardrobeFinishing(int m, int n, int cnt) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func wardrobeFinishing(m int, n int, cnt int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} m\n# @param {Integer} n\n# @param {Integer} cnt\n# @return {Integer}\ndef wardrobe_finishing(m, n, cnt)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def wardrobeFinishing(m: Int, n: Int, cnt: Int): Int = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn wardrobe_finishing(m: i32, n: i32, cnt: i32) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (wardrobe-finishing m n cnt)\n  (-> exact-integer? exact-integer? exact-integer? exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec wardrobe_finishing(M :: integer(), N :: integer(), Cnt :: integer()) -> integer().\nwardrobe_finishing(M, N, Cnt) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec wardrobe_finishing(m :: integer, n :: integer, cnt :: integer) :: integer\n  def wardrobe_finishing(m, n, cnt) do\n    \n  end\nend"}],"testcase":"4\n7\n5","testable":true,"templateMeta":{"name":"wardrobeFinishing","params":[{"name":"m","type":"integer"},{"name":"n","type":"integer"},{"name":"cnt","type":"integer"}],"return":{"type":"integer"}}}