{"id":100301,"fid":"LCR 159","name":"库存管理 III","slug":"zui-xiao-de-kge-shu-lcof","link":"https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof/description/","percent":57.732760582049835,"level":"Easy","category":"algorithms","en_name":"库存管理 III","cn_name":"库存管理 III","totalAC":"469.8K","totalSubmit":"813.4K","likes":594,"dislikes":0,"desc":"<p>仓库管理员以数组 <code>stock</code> 形式记录商品库存表，其中 <code>stock[i]</code> 表示对应商品库存余量。请返回库存余量最少的 <code>cnt</code> 个商品余量，返回&nbsp;<strong>顺序不限</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stock = [2,5,7,4], cnt = 1\n<strong>输出：</strong>[2]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>stock = [0,2,3,6], cnt = 2\n<strong>输出：</strong>[0,2] 或 [2,0]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= cnt &lt;= stock.length &lt;= 10000<br />\n\t0 &lt;= stock[i] &lt;= 10000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    vector<int> inventoryManagement(vector<int>& stock, int cnt) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int[] inventoryManagement(int[] stock, int cnt) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def inventoryManagement(self, stock, cnt):\n        \"\"\"\n        :type stock: List[int]\n        :type cnt: int\n        :rtype: List[int]\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def inventoryManagement(self, stock: List[int], cnt: int) -> List[int]:"},{"value":"c","text":"C","defaultCode":"/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* inventoryManagement(int* stock, int stockSize, int cnt, int* returnSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int[] InventoryManagement(int[] stock, int cnt) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} stock\n * @param {number} cnt\n * @return {number[]}\n */\nvar inventoryManagement = function(stock, cnt) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function inventoryManagement(stock: number[], cnt: number): number[] {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $stock\n     * @param Integer $cnt\n     * @return Integer[]\n     */\n    function inventoryManagement($stock, $cnt) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func inventoryManagement(_ stock: [Int], _ cnt: Int) -> [Int] {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun inventoryManagement(stock: IntArray, cnt: Int): IntArray {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  List<int> inventoryManagement(List<int> stock, int cnt) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func inventoryManagement(stock []int, cnt int) []int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} stock\n# @param {Integer} cnt\n# @return {Integer[]}\ndef inventory_management(stock, cnt)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def inventoryManagement(stock: Array[Int], cnt: Int): Array[Int] = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn inventory_management(stock: Vec<i32>, cnt: i32) -> Vec<i32> {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (inventory-management stock cnt)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec inventory_management(Stock :: [integer()], Cnt :: integer()) -> [integer()].\ninventory_management(Stock, Cnt) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec inventory_management(stock :: [integer], cnt :: integer) :: [integer]\n  def inventory_management(stock, cnt) do\n    \n  end\nend"}],"testcase":"[2,5,7,4]\n1","testable":true,"templateMeta":{"name":"inventoryManagement","params":[{"name":"stock","type":"integer[]"},{"name":"cnt","type":"integer"}],"return":{"type":"integer[]"}}}