{"id":100293,"fid":"LCR 146","name":"螺旋遍历二维数组","slug":"shun-shi-zhen-da-yin-ju-zhen-lcof","link":"https://leetcode.cn/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/description/","percent":42.365805492963794,"level":"Easy","category":"algorithms","en_name":"螺旋遍历二维数组","cn_name":"螺旋遍历二维数组","totalAC":"289.3K","totalSubmit":"684.9K","likes":602,"dislikes":0,"desc":"<p>给定一个二维数组 <code>array</code>，请返回「<strong>螺旋遍历</strong>」该数组的结果。</p>\n\n<p><strong>螺旋遍历</strong>：从左上角开始，按照 <strong>向右</strong>、<strong>向下</strong>、<strong>向左</strong>、<strong>向上</strong> 的顺序 <strong>依次</strong> 提取元素，然后再进入内部一层重复相同的步骤，直到提取完所有元素。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>array = [[1,2,3],[8,9,4],[7,6,5]]\n<strong>输出：</strong>[1,2,3,4,5,6,7,8,9]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>array &nbsp;= [[1,2,3,4],[12,13,14,5],[11,16,15,6],[10,9,8,7]]\n<strong>输出：</strong>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>限制：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= array.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= array[i].length &lt;= 100</code></li>\n</ul>\n\n<p>注意：本题与主站 54 题相同：<a href=\"https://leetcode-cn.com/problems/spiral-matrix/\">https://leetcode-cn.com/problems/spiral-matrix/</a></p>\n\n<p>&nbsp;</p>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    vector<int> spiralArray(vector<vector<int>>& array) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int[] spiralArray(int[][] array) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def spiralArray(self, array):\n        \"\"\"\n        :type array: List[List[int]]\n        :rtype: List[int]\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def spiralArray(self, array: List[List[int]]) -> List[int]:"},{"value":"c","text":"C","defaultCode":"/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* spiralArray(int** array, int arraySize, int* arrayColSize, int* returnSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int[] SpiralArray(int[][] array) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[][]} array\n * @return {number[]}\n */\nvar spiralArray = function(array) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function spiralArray(array: number[][]): number[] {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[][] $array\n     * @return Integer[]\n     */\n    function spiralArray($array) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func spiralArray(_ array: [[Int]]) -> [Int] {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun spiralArray(array: Array<IntArray>): IntArray {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  List<int> spiralArray(List<List<int>> array) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func spiralArray(array [][]int) []int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} array\n# @return {Integer[]}\ndef spiral_array(array)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def spiralArray(array: Array[Array[Int]]): Array[Int] = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn spiral_array(array: Vec<Vec<i32>>) -> Vec<i32> {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (spiral-array array)\n  (-> (listof (listof exact-integer?)) (listof exact-integer?))\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec spiral_array(Array :: [[integer()]]) -> [integer()].\nspiral_array(Array) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec spiral_array(array :: [[integer]]) :: [integer]\n  def spiral_array(array) do\n    \n  end\nend"}],"testcase":"[[1,2,3],[4,5,6],[7,8,9]]","testable":true,"templateMeta":{"name":"spiralArray","params":[{"name":"array","type":"integer[][]"}],"return":{"type":"integer[]"}}}