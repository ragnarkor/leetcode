{"id":3388,"fid":"3128","name":"直角三角形","slug":"right-triangles","link":"https://leetcode.cn/problems/right-triangles/description/","percent":55.692560624743116,"level":"Medium","category":"algorithms","en_name":"Right Triangles","cn_name":"直角三角形","totalAC":"20.4K","totalSubmit":"30.5K","likes":43,"dislikes":0,"desc":"<p>给你一个二维 boolean 矩阵&nbsp;<code>grid</code>&nbsp;。</p>\n\n<p>请你返回使用 <code>grid</code>&nbsp;中的 3 个元素可以构建的 <strong>直角三角形</strong> 数目，且满足 3 个元素值 <strong>都</strong>&nbsp;为 1 。</p>\n\n<p><b>注意：</b></p>\n\n<ul>\n\t<li>如果 <code>grid</code>&nbsp;中 3 个元素满足：一个元素与另一个元素在 <strong>同一行</strong>，同时与第三个元素在 <strong>同一列</strong>&nbsp;，那么这 3 个元素称为一个 <strong>直角三角形</strong>&nbsp;。这 3 个元素互相之间不需要相邻。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong class=\"example\">示例 1：</strong></p>\n\n<div style=\"display:flex; gap: 12px;\">\n<table border=\"1\" cellspacing=\"3\" style=\"border-collapse: separate; text-align: center;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<table border=\"1\" cellspacing=\"3\" style=\"border-collapse: separate; text-align: center;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n\n<div class=\"example-block\">\n<p><span class=\"example-io\"><b>输入：</b>grid = [[0,1,0],[0,1,1],[0,1,0]]</span></p>\n\n<p><span class=\"example-io\"><b>输出：</b>2</span></p>\n\n<p><b>解释：</b></p>\n\n<p>有 2 个直角三角形。</p>\n</div>\n\n<p><strong class=\"example\">示例 2：</strong></p>\n\n<div style=\"display:flex; gap: 12px;\">\n<table border=\"1\" cellspacing=\"3\" style=\"border-collapse: separate; text-align: center;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n\n<div class=\"example-block\">\n<p><span class=\"example-io\"><b>输入：</b>grid = [[1,0,0,0],[0,1,0,1],[1,0,0,0]]</span></p>\n\n<p><span class=\"example-io\"><b>输出：</b>0</span></p>\n\n<p><strong>解释：</strong></p>\n\n<p>没有直角三角形。</p>\n</div>\n\n<p><strong class=\"example\">示例 3：</strong></p>\n\n<div style=\"display:flex; gap: 12px;\">\n<table border=\"1\" cellspacing=\"3\" style=\"border-collapse: separate; text-align: center;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<table border=\"1\" cellspacing=\"3\" style=\"border-collapse: separate; text-align: center;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid red; --darkreader-inline-border-top: #b30000; --darkreader-inline-border-right: #b30000; --darkreader-inline-border-bottom: #b30000; --darkreader-inline-border-left: #b30000;\">1</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t\t<td data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"padding: 5px 10px; border: 1px solid black; --darkreader-inline-border-top: #8c8273; --darkreader-inline-border-right: #8c8273; --darkreader-inline-border-bottom: #8c8273; --darkreader-inline-border-left: #8c8273;\">0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n\n<div class=\"example-block\">\n<p><span class=\"example-io\"><b>输入：</b>grid = [[1,0,1],[1,0,0],[1,0,0]]</span></p>\n\n<p><strong>输出：</strong>2</p>\n\n<p><strong>解释：</strong></p>\n\n<p>有两个直角三角形。</p>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= grid[i].length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 1</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    long long numberOfRightTriangles(vector<vector<int>>& grid) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public long numberOfRightTriangles(int[][] grid) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numberOfRightTriangles(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numberOfRightTriangles(self, grid: List[List[int]]) -> int:"},{"value":"c","text":"C","defaultCode":"long long numberOfRightTriangles(int** grid, int gridSize, int* gridColSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public long NumberOfRightTriangles(int[][] grid) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar numberOfRightTriangles = function(grid) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function numberOfRightTriangles(grid: number[][]): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[][] $grid\n     * @return Integer\n     */\n    function numberOfRightTriangles($grid) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numberOfRightTriangles(_ grid: [[Int]]) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numberOfRightTriangles(grid: Array<IntArray>): Long {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int numberOfRightTriangles(List<List<int>> grid) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func numberOfRightTriangles(grid [][]int) int64 {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} grid\n# @return {Integer}\ndef number_of_right_triangles(grid)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numberOfRightTriangles(grid: Array[Array[Int]]): Long = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn number_of_right_triangles(grid: Vec<Vec<i32>>) -> i64 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (number-of-right-triangles grid)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec number_of_right_triangles(Grid :: [[integer()]]) -> integer().\nnumber_of_right_triangles(Grid) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec number_of_right_triangles(grid :: [[integer]]) :: integer\n  def number_of_right_triangles(grid) do\n    \n  end\nend"}],"testcase":"[[0,1,0],[0,1,1],[0,1,0]]","testable":true,"templateMeta":{"name":"numberOfRightTriangles","params":[{"name":"grid","type":"integer[][]"}],"return":{"type":"long"}}}